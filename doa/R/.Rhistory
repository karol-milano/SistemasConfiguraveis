nome <- arq_var[i, "Desenvolvedor"]
if (arq_var[i, "Classificacao"] != x[nome, "Valor"]) {
if (arq_var[i, "Classificacao"] == "Especialista") {
esp <- esp + 1
}
else if (arq_var[i, "Classificacao"] == "Generalista") {
gen <- gen + 1
}
else {
mis <- mis + 1
}
if (x[nome, "Valor"] != "") {
if (x[nome, "Valor"] == "Especialista") {
esp <- esp - 1
}
else if (x[nome, "Valor"] == "Generalista") {
gen <- gen - 1
}
else {
mis <- mis - 1
}
}
x[nome, "Valor"] <- arq_var[i, "Classificacao"]
}
if (dt != arq_var[i, "Data"]) {
for (j in idt:i) {
arq_var[j, "Especialista"] <- esp
arq_var[j, "Generalista"] <- gen
arq_var[j, "Misto"] <- mis
arq_var[j, "Total"] <- esp + gen + mis
}
idt <- i + 1
dt <- arq_var[i, "Data"]
}
}
df <- melt(arq_var, id.vars = "Data", variable.name = "Classificacao", measure.vars = c("Especialista", "Generalista", "Misto"))
df <- arrange(df, Data)
tabela <- paste("../resultados/", projeto, "/05_ClassificacaoPeloTempoDOA.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
df %>%
ggplot(aes(x = as.Date(Data), y = value, group = Classificacao, color = Classificacao)) +
geom_line() +
geom_point(alpha = 0.5, size = 0.75) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years", date_minor_breaks = "1 years") +
theme(axis.text.x = element_text(angle=90),
legend.position = "bottom") +
labs(x = "", y = "Quantidade de Desenvolvedores",
title = "Classificação do desenvolvedor pelo tempo")
arq_var <- valores %>%
select(Desenvolvedor, Data, Classificacao_ownership)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Data", "Desenvolvedor", "Classificacao_ownership")]), ]
arq_var <- arq_var %>%
arrange(Data, Desenvolvedor)
nomes <- unique(arq_var$Desenvolvedor)
x <- data.frame(matrix("", ncol = 1, nrow = length(nomes)), row.names = nomes)
dimnames(x)[[2]] <- c("Valor")
maj <- 0
min <- 0
idt <- 0
dt <- ""
for (i in 1:nrow(arq_var)) {
nome <- arq_var[i, "Desenvolvedor"]
if (arq_var[i, "Classificacao_ownership"] != x[nome, "Valor"]) {
if (arq_var[i, "Classificacao_ownership"] == "Major") {
maj <- maj + 1
}
else {
min <- min + 1
}
if (x[nome, "Valor"] != "") {
if (x[nome, "Valor"] == "Major") {
maj <- maj - 1
}
else {
min <- min - 1
}
}
x[nome, "Valor"] <- arq_var[i, "Classificacao_ownership"]
}
if (dt != arq_var[i, "Data"]) {
for (j in idt:i) {
arq_var[j, "Major"] <- maj
arq_var[j, "Minor"] <- min
arq_var[j, "Total"] <- maj + min
}
idt <- i + 1
dt <- arq_var[i, "Data"]
}
}
df <- melt(arq_var, id.vars = "Data", variable.name = "Classificacao", measure.vars = c("Major", "Minor"))
df <- arrange(df, Data)
tabela <- paste("../resultados/", projeto, "/06_ClassificacaoPeloTempoOwnership.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
df %>%
ggplot(aes(x = as.Date(Data), y = value, group = Classificacao, color = Classificacao)) +
geom_line() +
geom_point(alpha = 0.5, size = 0.75) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years", date_minor_breaks = "1 years") +
theme(axis.text.x = element_text(angle=90),
legend.position = "bottom") +
labs(x = "", y = "Quantidade de Desenvolvedores",
title = "Classificação do desenvolvedor pelo tempo")
#' Função que gera o gráfico ClassificacaoPeloTempo utilizando o ownership
#'
#' @param projeto O nome do projeto em que será feito a análise
#' @param valores Os dados lidos do arquivo
gerarClassificacaoPeloTempoOwnership <- function(projeto, valores) {
#projeto <- "Bison"
#valores <- lerPlanilhaCommits(projeto)
arq_var <- valores %>%
select(Desenvolvedor, Data, Classificacao_ownership)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Data", "Desenvolvedor", "Classificacao_ownership")]), ]
arq_var <- arq_var %>%
arrange(Data, Desenvolvedor)
nomes <- unique(arq_var$Desenvolvedor)
x <- data.frame(matrix("", ncol = 1, nrow = length(nomes)), row.names = nomes)
dimnames(x)[[2]] <- c("Valor")
maj <- 0
min <- 0
idt <- 0
dt <- ""
for (i in 1:nrow(arq_var)) {
nome <- arq_var[i, "Desenvolvedor"]
if (arq_var[i, "Classificacao_ownership"] != x[nome, "Valor"]) {
if (arq_var[i, "Classificacao_ownership"] == "Major") {
maj <- maj + 1
}
else {
min <- min + 1
}
if (x[nome, "Valor"] != "") {
if (x[nome, "Valor"] == "Major") {
maj <- maj - 1
}
else {
min <- min - 1
}
}
x[nome, "Valor"] <- arq_var[i, "Classificacao_ownership"]
}
if (dt != arq_var[i, "Data"]) {
for (j in idt:i) {
arq_var[j, "Major"] <- maj
arq_var[j, "Minor"] <- min
arq_var[j, "Total"] <- maj + min
}
idt <- i + 1
dt <- arq_var[i, "Data"]
}
}
df <- melt(arq_var, id.vars = "Data", variable.name = "Classificacao", measure.vars = c("Major", "Minor"))
df <- arrange(df, Data)
tabela <- paste("../resultados/", projeto, "/06_ClassificacaoPeloTempoOwnership.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
imagem <- paste("../resultados/", projeto, "/06_ClassificacaoPeloTempoOwnerShip.png", sep = "")
png(file = imagem)
p <- df %>%
ggplot(aes(x = as.Date(Data), y = value, group = Classificacao, color = Classificacao)) +
geom_line() +
geom_point(alpha = 0.5, size = 0.75) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years", date_minor_breaks = "1 years") +
theme(axis.text.x = element_text(angle=90),
legend.position = "bottom") +
labs(x = "", y = "Quantidade de Desenvolvedores",
title = "Classificação do desenvolvedor pelo tempo")
print(p)
dev.off()
}
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
gerarClassificacaoPeloTempoOwnership(file.names[i], valores)
}
path <- "../resultados/"
file.names <- dir(path)
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
gerarClassificacaoPeloTempoOwnership(file.names[i], valores)
}
#' Função que gera o gráfico PorcentagemClassificacaoPeloTempo
#'
#' @param projeto O nome do projeto em que será feito a análise
#' @param valores Os dados lidos do arquivo
gerarPorcentagemClassificacaoPeloTempo <- function(projeto, valores) {
#projeto <- "Collected"
#valores <- lerPlanilhaCommits(projeto)
arq_var <- valores %>%
select(Data, Desenvolvedor, Classificacao)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Data", "Desenvolvedor", "Classificacao")]), ]
arq_var <- arq_var %>%
arrange(Data, Desenvolvedor)
nomes <- unique(arq_var$Desenvolvedor)
x <- data.frame(matrix("", ncol = 1, nrow = length(nomes)), row.names = nomes)
dimnames(x)[[2]] <- c("Valor")
esp <- 0
gen <- 0
mis <- 0
idt <- 0
dt <- ""
for (i in 1:nrow(arq_var)) {
nome <- arq_var[i, "Desenvolvedor"]
if (arq_var[i, "Classificacao"] != x[nome, "Valor"]) {
if (arq_var[i, "Classificacao"] == "Especialista") {
esp <- esp + 1
}
else if (arq_var[i, "Classificacao"] == "Generalista") {
gen <- gen + 1
}
else {
mis <- mis + 1
}
if (x[nome, "Valor"] != "") {
if (x[nome, "Valor"] == "Especialista") {
esp <- esp - 1
}
else if (x[nome, "Valor"] == "Generalista") {
gen <- gen - 1
}
else {
mis <- mis - 1
}
}
x[nome, "Valor"] <- arq_var[i, "Classificacao"]
}
if (dt != arq_var[i, "Data"]) {
for (j in idt:i) {
arq_var[j, "Especialista"] <- esp
arq_var[j, "Generalista"] <- gen
arq_var[j, "Misto"] <- mis
arq_var[j, "Total"] <- esp + gen + mis
arq_var[j, "Perc_Especialista"] <- esp * 100 / arq_var[j, "Total"]
arq_var[j, "Perc_Generalista"] <- gen * 100 / arq_var[j, "Total"]
arq_var[j, "Perc_Misto"] <- mis * 100 / arq_var[j, "Total"]
}
idt <- i + 1
dt <- arq_var[i, "Data"]
}
}
df <- melt(arq_var, id.vars = "Data", variable.name = "Porcentagem", measure.vars = c("Perc_Especialista", "Perc_Generalista", "Perc_Misto"))
df <- arrange(df, Data)
tabela <- paste("../resultados/", projeto, "/07_PorcentagemClassificacaoPeloTempoDOA.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
imagem <- paste("../resultados/", projeto, "/07_PorcentagemClassificacaoPeloTempoDOA.png", sep = "")
png(file = imagem)
p <- df %>%
ggplot(aes(x = as.Date(Data), y = value, group = Porcentagem, color = Porcentagem)) +
geom_line() +
geom_point(alpha = 0.2, size = 0.5) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years", date_minor_breaks = "1 years") +
theme(axis.text.x = element_text(angle=90),
legend.position = "bottom") +
labs(x = "", y = "Porcentagem de desenvolvedores",
title = "Classificação do desenvolvedor pelo tempo")
# facet_wrap(~EhAutor, scales = "free_y", ncol = 1)
print(p)
dev.off()
}
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
gerarPorcentagemClassificacaoPeloTempo(file.names[i], valores)
}
#' Função que gera o gráfico PorcentagemClassificacaoPeloTempo
#'
#' @param projeto O nome do projeto em que será feito a análise
#' @param valores Os dados lidos do arquivo
gerarPorcentagemClassificacaoPeloTempoOwnerShip <- function(projeto, valores) {
#projeto <- "Uwsgi"
#valores <- lerPlanilhaCommits(projeto)
arq_var <- valores %>%
select(Desenvolvedor, Data, Classificacao_ownership)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Data", "Desenvolvedor", "Classificacao_ownership")]), ]
arq_var <- arq_var %>%
arrange(Data, Desenvolvedor)
nomes <- unique(arq_var$Desenvolvedor)
x <- data.frame(matrix("", ncol = 1, nrow = length(nomes)), row.names = nomes)
dimnames(x)[[2]] <- c("Valor")
maj <- 0
min <- 0
idt <- 0
dt <- ""
for (i in 1:nrow(arq_var)) {
nome <- arq_var[i, "Desenvolvedor"]
if (arq_var[i, "Classificacao_ownership"] != x[nome, "Valor"]) {
if (arq_var[i, "Classificacao_ownership"] == "Major") {
maj <- maj + 1
}
else {
min <- min + 1
}
if (x[nome, "Valor"] != "") {
if (x[nome, "Valor"] == "Major") {
maj <- maj - 1
}
else {
min <- min - 1
}
}
x[nome, "Valor"] <- arq_var[i, "Classificacao_ownership"]
}
if (dt != arq_var[i, "Data"]) {
for (j in idt:i) {
arq_var[j, "Major"] <- maj
arq_var[j, "Minor"] <- min
arq_var[j, "Total"] <- maj + min
arq_var[j, "Perc_Major"] <- maj * 100 / arq_var[j, "Total"]
arq_var[j, "Perc_Minor"] <- min * 100 / arq_var[j, "Total"]
}
idt <- i + 1
dt <- arq_var[i, "Data"]
}
}
df <- melt(arq_var, id.vars = "Data", variable.name = "Porcentagem", measure.vars = c("Perc_Major", "Perc_Minor"))
df <- arrange(df, Data)
tabela <- paste("../resultados/", projeto, "/08_PorcentagemClassificacaoPeloTempoOwnership.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
imagem <- paste("../resultados/", projeto, "/08_PorcentagemClassificacaoPeloTempoOwnership.png", sep = "")
png(file = imagem)
p <- df %>%
ggplot(aes(x = as.Date(Data), y = value, group = Porcentagem, color = Porcentagem)) +
geom_line() +
geom_point(alpha = 0.2, size = 0.5) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years", date_minor_breaks = "1 years") +
theme(axis.text.x = element_text(angle=90),
legend.position = "bottom") +
labs(x = "", y = "Porcentagem de desenvolvedores",
title = "Classificação do desenvolvedor pelo tempo")
print(p)
dev.off()
}
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
gerarPorcentagemClassificacaoPeloTempoOwnerShip(file.names[i], valores)
}
source("00_Funcoes.R")
x <- data.frame()
path <- "resultados/"
path <- "../resultados/"
file.names <- dir(path)
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
arq_var <- valores %>%
summarise(Desenvolvedor_n = length(unique(Desenvolvedor)),
Commit_n = length(unique(Commit)),
Variabilidades_n = length(unique(Variabilidades))) %>%
mutate(Projeto = file.names[i])
arq_var <- arq_var %>%
select(Projeto, everything())
x <- rbind(x, arq_var)
}
write.table(x, file="Contagem.csv", sep=",", row.names=F)
source("00_Funcoes.R")
path <- "../resultados/"
file.names <- dir(path)
#' Função que gera o gráfico DesenvolvedoresPorVariabilidadePeloTempo
#'
#' @param projeto O nome do projeto em que será feito a análise
#' @param valores Os dados lidos do arquivo
gerarDesenvolvedoresPorVariabilidadePeloTempo <- function(projeto, valores) {
#projeto <- "Cherokee"
#valores <- lerPlanilhaCommits(arquivo)
arq_var <- valores %>%
select(Desenvolvedor, Data, Variabilidades, EhAutor)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Desenvolvedor", "Data", "Variabilidades", "EhAutor")]), ]
arq_var <- arq_var %>%
group_by(Variabilidades, Data, EhAutor) %>%
summarise(Desenvolvedor = n())
tabela <- paste("../resultados/", projeto, "/12_DesenvolvedoresPorVariabilidadePeloTempo.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
imagem <- paste("../resultados/", projeto, "/12_DesenvolvedoresPorVariabilidadePeloTempo.png", sep = "")
png(file = imagem)
p <- arq_var %>%
ggplot(aes(x = "", y = Desenvolvedor)) +
geom_violin(fill="slateblue", draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width=0.1, fill="grey") +
stat_summary(fun.data = n_fun, geom = "text", color = "red", size = 10) +
theme(legend.position = "none") +
labs(x = "Tipo de Desenvolvedor", y = "Quantidade de Variabilidades",
title = "Tipo de desenvolvedor por variabilidades")
print(p)
dev.off()
}
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
gerarDesenvolvedoresPorVariabilidadePeloTempo(file.names[i], valores)
}
gerarDesenvolvedoresPorArquivo <- function(projeto, valores) {
#projeto <- "Gawk"
#valores <- lerPlanilhaAutores(projeto)
arq_var <- valores %>%
select(Arquivo, Desenvolvedor)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Arquivo", "Desenvolvedor")]), ]
arq_var <- arq_var %>%
group_by(Arquivo) %>%
summarise(Desenvolvedor = n())
tabela <- paste("../resultados/", projeto, "/02_ArquivosPorDesenvolvedor.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
imagem <- paste("../resultados/", projeto, "/02_ArquivosPorDesenvolvedor.png", sep = "")
png(file = imagem)
p <- arq_var %>%
ggplot(aes(x = "", y = Desenvolvedor)) +
geom_violin(fill="slateblue", draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width=0.1, fill="grey") +
stat_summary(fun.data = n_fun, geom = "text", color = "red", size = 10) +
theme(plot.title = element_text(size=22)) +
labs(x = "Arquivos", y = "Quantidade de Desenvolvedores",
title = "Desenvolvedores por arquivos")
print(p)
dev.off()
}
for (i in 1:length(file.names)) {
valores <- lerPlanilhaAutores(file.names[i])
gerarDesenvolvedoresPorArquivo(file.names[i], valores)
}
gerarDesenvolvedoresPorArquivo <- function(projeto, valores) {
#projeto <- "Gawk"
#valores <- lerPlanilhaAutores(projeto)
arq_var <- valores %>%
select(Arquivo, Desenvolvedor)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Arquivo", "Desenvolvedor")]), ]
arq_var <- arq_var %>%
group_by(Arquivo) %>%
summarise(Desenvolvedor = n())
tabela <- paste("../resultados/", projeto, "/17_DesenvolvedoresPorArquivo.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
imagem <- paste("../resultados/", projeto, "/17_DesenvolvedoresPorArquivo.png", sep = "")
png(file = imagem)
p <- arq_var %>%
ggplot(aes(x = "", y = Desenvolvedor)) +
geom_violin(fill="slateblue", draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width=0.1, fill="grey") +
stat_summary(fun.data = n_fun, geom = "text", color = "red", size = 10) +
theme(plot.title = element_text(size=22)) +
labs(x = "Arquivos", y = "Quantidade de Desenvolvedores",
title = "Desenvolvedores por arquivos")
print(p)
dev.off()
}
for (i in 1:length(file.names)) {
valores <- lerPlanilhaAutores(file.names[i])
gerarDesenvolvedoresPorArquivo(file.names[i], valores)
}
#' Função que gera o gráfico ArquivosPorDesenvolvedor
#'
#' @param projeto O nome do projeto em que será feito a análise
#' @param valores Os dados lidos do arquivo
gerarArquivosPorDesenvolvedor <- function(projeto, valores) {
#projeto <- "Gawk"
#valores <- lerPlanilhaAutores(projeto)
arq_var <- valores %>%
select(Arquivo, Desenvolvedor)
arq_var <- arq_var[complete.cases(arq_var), ]
arq_var <- arq_var[!duplicated(arq_var[, c("Arquivo", "Desenvolvedor")]), ]
arq_var <- arq_var %>%
group_by(Desenvolvedor) %>%
summarise(Arquivo = n())
tabela <- paste("../resultados/", projeto, "/02_ArquivosPorDesenvolvedor.csv", sep = "")
write.table(arq_var, file=tabela, sep=",", row.names=F)
imagem <- paste("../resultados/", projeto, "/02_ArquivosPorDesenvolvedor.png", sep = "")
png(file = imagem)
p <- arq_var %>%
ggplot(aes(x = "", y = Arquivo)) +
geom_violin(fill="slateblue", draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width=0.1, fill="grey") +
stat_summary(fun.data = n_fun, geom = "text", color = "red", size = 10) +
theme(plot.title = element_text(size=22)) +
labs(x = "Desenvolvedor", y = "Quantidade de Arquivos",
title = "Arquivos por desenvolvedor")
print(p)
dev.off()
}
for (i in 1:length(file.names)) {
valores <- lerPlanilhaAutores(file.names[i])
gerarArquivosPorDesenvolvedor(file.names[i], valores)
}
x <- data.frame()
path <- "../resultados/"
file.names <- dir(path)
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
arq_var <- valores %>%
summarise(Arquivo_n = length(unique(Arquivo)),
Desenvolvedor_n = length(unique(Desenvolvedor)),
Commit_n = length(unique(Commit)),
Variabilidades_n = length(unique(Variabilidades))) %>%
mutate(Projeto = file.names[i])
arq_var <- arq_var %>%
select(Projeto, everything())
x <- rbind(x, arq_var)
}
source("00_Funcoes.R")
x <- data.frame()
path <- "../resultados/"
file.names <- dir(path)
for (i in 1:length(file.names)) {
valores <- lerPlanilhaCommits(file.names[i])
arq_var <- valores %>%
summarise(Arquivo_n = length(unique(Arquivo)),
Desenvolvedor_n = length(unique(Desenvolvedor)),
Commit_n = length(unique(Commit)),
Variabilidades_n = length(unique(Variabilidades))) %>%
mutate(Projeto = file.names[i])
arq_var <- arq_var %>%
select(Projeto, everything())
x <- rbind(x, arq_var)
}
write.table(x, file="Contagem.csv", sep=",", row.names=F)
